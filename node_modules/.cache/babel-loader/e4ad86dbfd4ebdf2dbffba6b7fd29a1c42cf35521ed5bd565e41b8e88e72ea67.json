{"ast":null,"code":"var _jsxFileName = \"D:\\\\Reyajul\\\\New folder (2)\\\\my-app\\\\src\\\\components\\\\Users.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Table from 'react-bootstrap/Table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Users() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [datas, setDatas] = useState([]);\n  const fetchUserData = () => {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => {\n      return response.json();\n    }).then(data => {\n      setUsers(data);\n    });\n  };\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      title: 'React POST Request Example'\n    })\n  };\n  const fetchNewData = () => {\n    fetch('https://reqres.in/api/posts', requestOptions).then(response => response.json()).then(data => this.setState({\n      postId: data.id\n    }));\n  };\n  useEffect(() => {\n    fetchUserData();\n    fetchNewData();\n    console.log(datas);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Users \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), users.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      size: \"sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_s(Users, \"2f9IIyuIGNsbfHn3R/rCeY/4ia8=\");\n_c = Users;\nexport default Users;\nvar _c;\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"names":["React","useEffect","useState","Table","jsxDEV","_jsxDEV","Fragment","_Fragment","Users","_s","users","setUsers","datas","setDatas","fetchUserData","fetch","then","response","json","data","requestOptions","method","headers","body","JSON","stringify","title","fetchNewData","setState","postId","id","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","length","striped","bordered","hover","size","map","user","name","email","username","_c","$RefreshReg$"],"sources":["D:/Reyajul/New folder (2)/my-app/src/components/Users.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nfunction Users()\r\n{\r\n    const [users, setUsers] = useState([]);\r\n    const [datas, setDatas] = useState([]);\r\n\r\n    const fetchUserData = () => {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .then(data => {\r\n            setUsers(data)\r\n        })\r\n    };\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ title: 'React POST Request Example' })\r\n    };\r\n\r\n    const fetchNewData = () => {\r\n        fetch('https://reqres.in/api/posts', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ postId: data.id }));\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchUserData();\r\n        fetchNewData();\r\n        console.log(datas);\r\n    }, []);\r\n\r\n    return(\r\n        <>\r\n            <h1>Users </h1>\r\n\r\n            {users.length > 0 && (\r\n                <Table  striped bordered hover size=\"sm\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>#</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Username</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {users.map(user => (\r\n                        <tr key={user.id}>\r\n                            <td>{user.id}</td>\r\n                            <td>{user.name}</td>\r\n                            <td>{user.email}</td>\r\n                            <td>{user.username}</td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </Table>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Users;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}